@*
 * Copyright 2013 LBi Netherlands B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 *@
@using LBi.LostDoc.Repository
@using LBi.LostDoc.Repository.Web.Areas.Administration
@using LBi.LostDoc.Repository.Web.Extensibility
@using LBi.LostDoc.Repository.Web.Extensibility.Mvc
@model LBi.LostDoc.Repository.Web.Areas.Administration.Models.ModelBase

@functions {
    private string GetContainerClass(Navigation navigation)
    {
        string cssClass = "";
        if (navigation.Children.Length > 0)
            cssClass += " container";

        return cssClass;
    }

    private string GetButtonClass(Navigation navigation)
    {
        string cssClass = "button tilt";
        if (navigation.IsActive)
            cssClass += " active";

        return cssClass;
    }

    private string GetNotificationState()
    {
        if (Model.Notifications.Length > 0)
            return "closed";

        return "hidden";
    }

}

@helper RenderNavigation(Navigation[] navigation)
{
    <ul>
        @foreach (var nav in navigation)
        {
            @RenderNavigation(nav)
        }
    </ul>
}

@helper RenderNavigation(Navigation navigation)
{
    <li class="@this.GetContainerClass(navigation)">
        <a class="@this.GetButtonClass(navigation)" href="@navigation.Target" title="@navigation.Text">@navigation.Text</a>
        @if (navigation.Children.Length > 0)
        {
            @RenderNavigation(navigation.Children)
        }
    </li>
}

<!DOCTYPE html>

<html>
<head>
    <title>@Model.PageTitle</title>
    <script>
        // clear any less cached items from localStorage (XXX doesn't really make
        // sense to me, but the less compiler (a testing tool!) caches compiled
        // results in localStorage)
        for (var key in (localStorage || {})) {
            if (/^https?:\/\/.*\.less(:timestamp)?$/.test(key)) {
                delete localStorage[key];
            }
        }
    </script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <link rel="stylesheet/less" href="~/Areas/Administration/Static/lostdoc.admin.less" />
    @RenderSection("CssIncludes", false)
    <script src="~/Areas/Administration/Static/Lib/less-1.3.0.min.js"></script>
    @RenderSection("ScriptIncludes", false)
</head>
<body>
    <div id="wrapper">
        <nav role="navigation">
            <header role="banner">
                <div class="logo">
                    <!-- TODO fix this logo/country thing -->
                    <a href="/" title="LBi" rel="home">
                        <img src="~/static/img/logo_LBi.gif" alt="LBi"></a>
                </div>
            </header>
            <!-- /header -->
            <span class="handle"></span>

            @RenderNavigation(Model.Navigation)
        </nav>
        <!-- / Main navigation -->

        <section role="main">
            @this.RenderBody()
        </section>
        <!-- / content section -->
    </div>


    <section role="alert" class="@GetNotificationState()">
        <div class="handle">
            <span class="icon"></span>
            <span class="count">
                @Model.Notifications.Count().ToString("N0")
            </span>
        </div>
        <div class="pusher"></div>
        <ul>
            @foreach (var notification in Model.Notifications)
            {
                <li role="alert" id="alert-@notification.Id.ToBase36String()">
                    <strong>@notification.Title <span>@((DateTime.UtcNow - notification.Created).ToHumanReadableString()) ago</span></strong>

                    <p>@notification.Message</p>

                    @foreach (var action in notification.Actions)
                    {
                        <a role="button" href="@action.Target" class="action">@action.Text</a>
                    }
                </li>
            }

        </ul>
        <div class="close">
            <span class="icon"></span>
        </div>
    </section>

    <script src="~/Areas/Administration/Static/lostdoc.notifications.js"></script>
    <script src="~/Areas/Administration/Static/lostdoc.admin.js"></script>
    @RenderSection("PageScripts", false)
</body>
</html>
