TODO

templates
=========

* add "debug" param to template to control less/js minification/compilation.

* rework xsl:sort in navigation2.xslt
  1. Generate unsorted output _with_ sort-key
  2. capture output in node-set
  3. Sort node-set on li/a/@sort-key

// * method/types with generics need constraints in the C# syntax!

// * fix html/js to allow for 
//  * search (using websockets for suggestions?)
//  * adjustable column width nav/content

* create service template

cli
===
* add command to generate a template NSdoc file (also with assembly level comment)

core
====

* add google closure compiler for js (via IKVM)
  somehow support multiple files as input for transform

* add StatisticsBuilder and expose it so Repository can get nice statistics
  also reduces the line count in Template.cs

* sort out messed up Lostdoc URN Namespacing
  should be: urn:schemas-lbi-nl:lostdoc:template ??

* add support for intermediary xslt output/input
  add optional "input" attribute to apply-stylesheet
  create "apply-stylesheet" counterpart for generating intermediary files

repository
==========

// * create site-wide admin notifications

* implement SignalR for the notifications?

// * set up app logging

// * set up API-controllers through MEF/add-ins as well

* extract ContentRepositoryController logic into LBi.LostDoc.Repository.Xxx

* capture nuget logging and redirect to app log

// * add settings to the repository for custom feeds, etc

// * add ability down view/select & download templates (as zip package from)

* add ability to upload zip template packages?
  could be done via a ZipFileProvider pointing to a "Templates" folder

* add db/storage for local edits

* implement single-page render for local edit preview/saving
